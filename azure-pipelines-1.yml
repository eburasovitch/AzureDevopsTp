# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: 'default'

variables:
  - name: RgName
    value : 'eburaso'
  - name: StorageAccount
    value : 'storagebura'
  - name : FileName
    value: 'CustomExtension.ps1'
  - name : FileURL
    value : ''

steps:
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(f224499d-9e08-44eb-80e4-92cba7013495)'
    subscriptionId: 'f224499d-9e08-44eb-80e4-92cba7013495'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'eburaso'
    location: 'East US'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)/StorageAccount/azuredeploy.json'
    csmParametersFile: '$(Build.SourcesDirectory)/StorageAccount/azuredeploy.parameters.json'
    deploymentMode: 'Complete'
    deploymentOutputs: 'StorageAccountDeployment'


- task: PowerShell@2
  displayName: Pushing PowerShell File onto Storage Account
  inputs:
    targetType: 'inline'
    script: |
            Write-Host $(StorageAccountDeployment.storageKey.Value)

            $context = New-AzStorageContext -StorageAccountName $(StorageAccount) -StorageAccountKey $(StorageAccountDeployment.storageKey.Value)
            $setParams = @{
                Container =  'blob'
                File      = [System.IO.Path]::GetFullPath([System.IO.Path]::Combine('$(Build.SourcesDirectory)', './StorageAccount/$(FileName)'))
                Context   = $context
            }
            Write-Host $setParams.File

            $blob = Set-AzStorageBlobContent @setParams -Force
            $url = $blob.ICloudBlob.Uri.AbsoluteUri

            Write-Host $url

            Write-Host "##vso[task.setvariable variable=FileURL]$url"
